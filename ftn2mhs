#!/bin/bash
#
# FTN2MHS v0.0.1
#
# https://github.com/ftoledo/ftn2mhs
#
# License: GPL-3

OLDIFS="$IFS"

trim() {
    local var="$*"
    # remove leading whitespace characters
    var="${var#"${var%%[![:space:]]*}"}"
    # remove trailing whitespace characters
    var="${var%"${var##*[![:space:]]}"}"
    echo -n "$var"
}

# Unpack pkt files
mhs_import() {
  echo "Begin import"
  echo "My address ${CFG[address]}"
  for pkt in `find ${CFG[fido_in]} -iname *.pkt`
  do
      echo -e "Processing: $pkt"
      destAddr=`ftn-querypkt -q destAddr $pkt`
      origAddr=`ftn-querypkt -q origAddr $pkt`
      if [ "${CFG[address]}" == "$destAddr" ]; then
        ftn-unpack -D ${CFG[work]} $pkt
        if [ $? -eq 0 ]; then
          rm $pkt
        fi
        mhs_import_messages
      else
        echo "Not for my: $origAddr => $destAddr"
      fi
  done
}

# convert each msg into msh file
mhs_import_messages() {
  for msg in `find ${CFG[work]} -iname *.msg`
  do
      echo "Processing: $msg"
      IFS=""
      MSG_TEXT=`ftn-scanmsg -t $msg | tr '\0' '\r\n'`
      HEADERS=`echo $MSG_TEXT | sed '/^$/q'`
      BODY=`echo $MSG_TEXT | sed -e '1,/^$/d'`
      OUT_FILE=`mktemp -u -p ${CFG[mhs_in]} -t XXXXXXX --suffix .msg`

      #detect netmail/echomail
      detected=1
      echo $HEADERS |grep "Flags:" |grep -i PRIVATE
      if [ $? -eq 0 ]; then
          is_private=1
      else
          echo $HEADERS |grep "Area:"
          if [ $? -eq 0 ]; then
              is_private=0
              area=`echo $HEADERS |grep "Area:" | cut -f 2 -d ":"`
              area=`trim $area`
          else
              echo "ERROR: can detect msg type (netmail/echomail)"
              detected=0
          fi
      fi
      if [ $detected -eq 1 ]; then
          echo $HEADERS

          # From
          echo $HEADERS | grep "From:" >$OUT_FILE

          if [ $is_private -eq 1 ]; then
              # To
              to_line=`echo $HEADERS | grep "To: "`
              IFS=':'
              read -r field value <<< "$to_line"
              to_name=`echo $value | cut -f 1 -d "@"`
              IFS=""
              to_name=`trim $to_name`
              echo "To: $to_name @ MBBS {MBBS: $to_name}" >> $OUT_FILE
              # Summary
              value=`trim $value`
              echo "Summary: MBBS: $value" >> $OUT_FILE
          else
              # To
              echo "To: /$area @ MBBS {MBBS: /$area}" >> $OUT_FILE
              # Summary
              echo "Summary: MBBS: $value" >> $OUT_FILE
          fi

          # Subject
          echo $HEADERS | grep "Subject:" >> $OUT_FILE

          # Date
          echo $HEADERS | grep "Date:" >> $OUT_FILE
          echo -e "\r\n" >> $OUT_FILE
          echo $BODY >> $OUT_FILE
          rm $msg

      fi
  done
}
mhs_export() {
  echo "Begin export message"

}

declare -A CFG
if [ -f config ]; then
 . config
else
  echo "Config file do not exits, please create it to continue"
  exit 1
fi
if [ -f pre-import ]; then
    . pre-import
fi
mhs_import
if [ -f post-import ]; then
    . post-import
fi

mhs_export
