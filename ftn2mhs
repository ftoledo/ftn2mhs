#!/bin/bash
OLDIFS="$IFS"

PATH_FIDO_IN=fido_in
PATH_MHS_IN=mhs_in
PATH_WORK=work

trim() {
    local var="$*"
    # remove leading whitespace characters
    var="${var#"${var%%[![:space:]]*}"}"
    # remove trailing whitespace characters
    var="${var%"${var##*[![:space:]]}"}"
    echo -n "$var"
}

mhs_import() {
    # Unpack pkt files at temp/work dir
    rm $PATH_WORK/*
    rm $PATH_MHS_IN/*
    for pkt in `find $PATH_FIDO_IN -iname *.pkt`
    do
        echo -e "Processing: $pkt"
        ftn-unpack -D $PATH_WORK $pkt
    done

    # convert each msg into msh file
    for msg in `find $PATH_WORK -iname *.msg`
    do
        echo "Processing: $msg"
        IFS=""
        MSG_TEXT=`ftn-scanmsg -t $msg | tr '\0' '\r\n'`
        HEADERS=`echo $MSG_TEXT | sed '/^$/q'`
        BODY=`echo $MSG_TEXT | sed -e '1,/^$/d'`
        OUT_FILE=`basename $msg .msg`

        #detect netmail/echomail
        detected=1
        echo $HEADERS |grep "Flags:" |grep -i PRIVATE
        if [ $? -eq 0 ]; then
            is_private=1
        else
            echo $HEADERS |grep "Area:"
            if [ $? -eq 0 ]; then
                is_private=0
                area=`echo $HEADERS |grep "Area:" | cut -f 2 -d ":"`
                area=`trim $area`
            else
                echo "ERROR: can detect msg type (netmail/echomail)"
                detected=0
            fi
        fi
        if [ $detected -eq 1 ]; then
            echo $HEADERS

            # From
            echo $HEADERS | grep "From:" >$PATH_MHS_IN/$OUT_FILE

            if [ $is_private -eq 1 ]; then
                # To
                to_line=`echo $HEADERS | grep "To: "`
                IFS=':'
                read -r field value <<< "$to_line"
                to_name=`echo $value | cut -f 1 -d "@"`
                IFS=""
                to_name=`trim $to_name`
                echo "To: $to_name @ MBBS {MBBS: $to_name}" >> $PATH_MHS_IN/$OUT_FILE
                # Summary
                value=`trim $value`
                echo "Summary: MBBS: $value" >>$PATH_MHS_IN/$OUT_FILE
            else
                # To
                echo "To: /$area @ MBBS {MBBS: /$area}" >> $PATH_MHS_IN/$OUT_FILE
                # Summary
                echo "Summary: MBBS: $value" >>$PATH_MHS_IN/$OUT_FILE
            fi

            # Subject
            echo $HEADERS | grep "Subject:" >>$PATH_MHS_IN/$OUT_FILE

            # Date
            echo $HEADERS | grep "Date:" >>$PATH_MHS_IN/$OUT_FILE
            echo -e "\r\n" >>$PATH_MHS_IN/$OUT_FILE
            echo $BODY >>$PATH_MHS_IN/$OUT_FILE

        fi
    done
}
mhs_export() {
  echo "Begin export message"

}

if [ -f config ]; then
  source ./config
else
  echo "Config file do not exits, please create it to continue"
  exit 1
fi
mhs_import
mhs_export
